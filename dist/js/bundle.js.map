{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,2BAA2B,UAAU,EAAE;AAChE;AACA;AACA;AACA;AACA,YAAY,aAAa;AACzB;AACA;AACA;AACA,uDAAuD,GAAG;AAC1D;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,cAAc,UAAU;AACxB,cAAc,UAAU;AACxB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;AClFA,qBAAqB,mBAAO,CAAC,qDAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,4BAA4B,4BAA4B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,yBAAyB;AACzD;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACrBA,iBAAiB,mBAAO,CAAC,6DAA4B;AACrD,qBAAqB,mBAAO,CAAC,gEAA2B;AACxD,0BAA0B,mBAAO,CAAC,gFAAmC;AACrE,iBAAiB,mBAAO,CAAC,wDAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,KAAK;AACpB,eAAe,KAAK;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,KAAK;AACpB;AACA;AACA;AACA,sDAAsD,IAAI;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC5CA,mBAAmB,mBAAO,CAAC,mEAA6B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;UCXA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA,eAAe,mBAAO,CAAC,yCAAkB;AACzC,uBAAuB,mBAAO,CAAC,yDAA0B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA","sources":["webpack://portfolio/./src/ScrollObserver.js","webpack://portfolio/./src/helpers/Database.js","webpack://portfolio/./src/helpers/FormatErrors.js","webpack://portfolio/./src/helpers/Selector.js","webpack://portfolio/./src/submit.js","webpack://portfolio/./src/validation/Validation.js","webpack://portfolio/./src/validation/ValidationFactory.js","webpack://portfolio/webpack/bootstrap","webpack://portfolio/./src/script.js"],"sourcesContent":["class ScrollObserver {\r\n\r\n\tconstructor(selectorValue = '[data-spy=\"scoll\"]', activeClass = 'active', ratio = .6) {\r\n\t\tthis.ratio = ratio;\r\n\t\tthis.entries = document.querySelectorAll(selectorValue);\r\n        this.activeClass = activeClass;\r\n        this.calculOptions();\r\n        this.observer = null;\r\n\t}\r\n\r\n\tcalculOptions() {\r\n\t\tconst y = Math.round(window.innerHeight * this.ratio);\r\n        this.options = {\r\n        \trootMargin: `-${window.innerHeight - y - 1}px 0px -${y}px 0px`\r\n        }\r\n\t}\r\n\r\n\t/**\r\n\t * @param {HTMLElement} element \r\n\t */\r\n\tactivate(element) {\r\n\t    const id = element.id;\r\n\t    const anchor = document.querySelector(`a[href=\"#${id}\"]`);\r\n\t    if (anchor === null) {\r\n\t        return null;\r\n\t    }\r\n\t    anchor.parentElement.parentElement.querySelectorAll('.'+ this.activeClass).forEach(node => {\r\n\t        node.classList.remove(this.activeClass);\r\n\t    });\r\n\t    anchor.classList.add(this.activeClass);\r\n\t}\r\n\t\r\n\tobserve() {\r\n\t\tif(this.observer !== null) {\r\n\t        this.entries.forEach(entry => observer.unobserve(entry));\r\n\t    }\r\n\t    this.calculOptions();\r\n\t    const entries = this.entries;\r\n        this.observer = new IntersectionObserver((entries) => {\r\n        \tentries.forEach((entry) => {\r\n\t            if(entry.intersectionRatio > 0) {\r\n\t                this.activate(entry.target);\r\n\t        \t}\r\n\t\t\t});\r\n        }, this.options);\r\n        this.entries.forEach(entry => { \r\n            this.observer.observe(entry);\r\n        });\r\n        this.entries.forEach(entry => this.observer.observe(entry));\r\n    }\r\n\r\n    /**\r\n\t * @param   {function} callback\r\n\t * @param   {number}   delay \r\n\t * @returns {function}\r\n\t */\r\n    debounce(callback, delay) {\r\n    \tlet timer;\r\n\t    return function () {\r\n\t        let args = arguments;\r\n\t        let context = this;\r\n\t        clearTimeout(timer);\r\n\t        timer = setTimeout(function () {\r\n\t            callback.apply(context, args);\r\n\t        }, delay)\r\n\t    }\r\n    }\r\n\r\n    run() {\r\n    \tif(this.entries.length > 0) {\r\n\t\t    this.observe();\r\n\t\t    let WindowH = window.innerHeight;\r\n\t\t    window.addEventListener('resize', this.debounce(() => {\r\n\t\t        if (window.innerHeight !== WindowH) {\r\n\t\t            this.observe();\r\n\t\t            WindowH = window.innerHeight;\r\n\t\t        }\r\n\t\t    }, 500));\r\n\t\t}\r\n    }\r\n}\r\n\r\nmodule.exports = ScrollObserver;","const FormatErrors = require(\"./FormatErrors\");\r\n\r\nclass Database {\r\n\r\n    constructor(data, url) {\r\n        this.data = data;\r\n        this.url = url;\r\n    }\r\n\r\n    async post(document) {\r\n        const message = document.querySelector(\"#message\");\r\n        message.innerHTML = \"Envoi en cours\";\r\n        try {\r\n            return await fetch(this.url, {\r\n                method: 'POST',\r\n                body: JSON.stringify(this.data),\r\n                headers: {\r\n                    'Content-type': 'application/json; charset=UTF-8',\r\n                }\r\n            }).then((response) => {\r\n                this.manageResponse(response, message);\r\n                return response.json();\r\n            }).then((json) => {\r\n                if(json === {}) {\r\n                    return true;\r\n                }\r\n                const format = new FormatErrors(json);\r\n                format.appendMessage(document);\r\n                return false;\r\n            });\r\n        } catch(e) {\r\n            this.getError(message);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    manageResponse(response, message) {\r\n        const alert = document.createElement('p');\r\n        message.innerHTML = \"\";\r\n        if(response.status === 201) {\r\n            alert.classList.add('alert-success');\r\n            alert.innerHTML = \"Le message a bien été envoyé.\";\r\n        } else {\r\n            alert.classList.add('alert-danger');\r\n            alert.innerHTML = \"L'envoi a échoué.\";\r\n        }\r\n        message.appendChild(alert);\r\n    }\r\n\r\n    getError(message) {\r\n        message.classList.add('alert-danger');\r\n        message.innerHTML = \"Il y a eu une erreur\";\r\n    }\r\n}\r\n\r\nmodule.exports = Database;","class FormatErrors {\r\n\r\n    constructor(errors) {\r\n        this.errors = errors;\r\n    }\r\n\r\n    appendMessage(document) {\r\n        if(Array.isArray(this.errors)) {\r\n            return this.appendErrorsWithArray(document);\r\n        } else {\r\n            return this.appendErrorsWithObject(document);\r\n        }\r\n    }\r\n\r\n    appendErrorsWithObject(document) {\r\n        if(Object.keys(this.errors).length === 0) {\r\n            return false;\r\n        }\r\n        for (const property in this.errors) {\r\n            this.createField(property, this.errors[property], document);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    appendErrorsWithArray(document) {\r\n        document.querySelectorAll('.alert-danger').forEach(element => {\r\n            element.remove();\r\n        });\r\n\r\n        if(this.errors.length === 0) {\r\n            return false;\r\n        }\r\n        for (let index = 0; index < this.errors.length; index++) {\r\n            const id = this.errors[index][0];\r\n            const message = this.errors[index][1];\r\n            this.createField(id, message, document);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    createField(id, message, document) {\r\n        const field = document.querySelector('#' + id);\r\n        const error = document.createElement('div');\r\n        error.classList.add('alert-danger');\r\n        error.innerHTML = message;\r\n        field.parentElement.appendChild(error, document);\r\n    }\r\n}\r\n\r\nmodule.exports = FormatErrors;","class Selector {\r\n    \r\n    constructor(...ids) {\r\n        this.ids = ids;\r\n        this.data = [];\r\n    }\r\n\r\n    selectValue(document) {\r\n        try {\r\n            for (let index = 0; index < this.ids.length; index++) {\r\n                const id = this.ids[index];\r\n                const value = document.querySelector('#' + id).value;\r\n                this.data.push(value);\r\n            } \r\n        } catch (error) {\r\n            throw new TypeError(\"This ids of array Selector.ids does not exist in this page!\");\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nmodule.exports = Selector;","const Selector = require('../src/helpers/Selector.js');\r\nconst FormatErrors = require('./helpers/FormatErrors.js');\r\nconst validationFactory = require('./validation/ValidationFactory.js');\r\nconst Database = require('./helpers/Database.js');\r\n\r\nfunction submit (document) {\r\n    const selector = new Selector('username', 'email', 'subject', 'content');\r\n    selector.selectValue(document);\r\n    const data = selector.data;\r\n    const errors = validationFactory(data);\r\n    if(errors.length === 0) {\r\n        const database = new Database(data, '/contact');\r\n        return database.post(document);\r\n    } else {\r\n        const format = new FormatErrors(errors);\r\n        format.appendMessage(document);\r\n        return false;\r\n    }\r\n}\r\n\r\nmodule.exports = submit;","class Validation {\r\n\r\n    /**\r\n     * \r\n     * @param {array} data - array of form values\r\n     */\r\n    constructor(data) {\r\n        this.data = data;\r\n        this.errors = [];\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {int} key\r\n     * @param {int} max = 20\r\n     */\r\n    maxLength(key, fieldId, max = 20) {\r\n        const value = this.data[key];\r\n        if(value.length > max) {\r\n            this.errors.push([fieldId, \"Ce champ est trop long\"]);\r\n        }\r\n    }\r\n\r\n    minLength(key, fieldId, min = 20) {\r\n        const value = this.data[key];\r\n        if(value.length < min) {\r\n            this.errors.push([fieldId, \"Ce champ est trop court\"]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {int} key \r\n     */\r\n    email(key, fieldId) {\r\n        const value = this.data[key];\r\n        const regex = /^([\\w\\.\\-]+)@([\\w\\-]+)((\\.(\\w){2,3})+)$/;\r\n        if(!regex.test(value)) {\r\n            this.errors.push([fieldId, \"Ce champ n'est pas un email\"]);\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = Validation;\r\n\r\n","const Validation = require('../validation/Validation.js');\r\n\r\nfunction validationFactory(data) {\r\n    const validation = new Validation(data);\r\n    validation.minLength(0, 'username', 5);\r\n    validation.email(1, 'email');\r\n    validation.minLength(2, 'subject', 5);\r\n    validation.minLength(3, 'content', 20);\r\n    return validation.errors;\r\n}\r\n\r\nmodule.exports = validationFactory;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const submit = require('../src/submit.js');\r\nconst ScrollObserver = require('../src/ScrollObserver.js');\r\nwindow.onload = () => {\r\n    const scrollObserver = new ScrollObserver();\r\n    scrollObserver.run();\r\n\r\n    const submitButton = document.querySelector('#submit');\r\n    submitButton.addEventListener('click', (event) => {\r\n        event.preventDefault();\r\n        submit(document);\r\n    });\r\n}\r\n\r\n"],"names":[],"sourceRoot":""}